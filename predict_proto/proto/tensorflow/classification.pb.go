// Code generated by protoc-gen-go. DO NOT EDIT.
// source: classification.proto

/*
Package tensorflow is a generated protocol buffer package.

It is generated from these files:
	classification.proto
	example.proto
	feature.proto
	input.proto
	model.proto
	predict.proto
	prediction_service.proto
	regression.proto
	resource_handle.proto
	tensor.proto
	tensor_shape.proto
	types.proto

It has these top-level messages:
	Class
	Classifications
	ClassificationResult
	ClassificationRequest
	ClassificationResponse
	Example
	SequenceExample
	BytesList
	FloatList
	Int64List
	Feature
	Features
	FeatureList
	FeatureLists
	ExampleList
	ExampleListWithContext
	Input
	ModelSpec
	PredictRequest
	PredictResponse
	Regression
	RegressionResult
	RegressionRequest
	RegressionResponse
	ResourceHandleProto
	TensorProto
	VariantTensorDataProto
	TensorShapeProto
*/
package tensorflow

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// A single class.
type Class struct {
	// Label or name of the class.
	Label string `protobuf:"bytes,1,opt,name=label" json:"label"`
	// Score for this class (e.g., the probability the item belongs to this
	// class). As per the proto3 default-value semantics, if the score is missing,
	// it should be treated as 0.
	Score float32 `protobuf:"fixed32,2,opt,name=score" json:"score"`
}

func (m *Class) Reset()                    { *m = Class{} }
func (m *Class) String() string            { return proto.CompactTextString(m) }
func (*Class) ProtoMessage()               {}
func (*Class) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Class) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Class) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

// List of classes for a single item (tensorflow.Example).
type Classifications struct {
	Classes []*Class `protobuf:"bytes,1,rep,name=classes" json:"classes"`
}

func (m *Classifications) Reset()                    { *m = Classifications{} }
func (m *Classifications) String() string            { return proto.CompactTextString(m) }
func (*Classifications) ProtoMessage()               {}
func (*Classifications) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Classifications) GetClasses() []*Class {
	if m != nil {
		return m.Classes
	}
	return nil
}

// Contains one result per input example, in the same order as the input in
// ClassificationRequest.
type ClassificationResult struct {
	Classifications []*Classifications `protobuf:"bytes,1,rep,name=classifications" json:"classifications"`
}

func (m *ClassificationResult) Reset()                    { *m = ClassificationResult{} }
func (m *ClassificationResult) String() string            { return proto.CompactTextString(m) }
func (*ClassificationResult) ProtoMessage()               {}
func (*ClassificationResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ClassificationResult) GetClassifications() []*Classifications {
	if m != nil {
		return m.Classifications
	}
	return nil
}

type ClassificationRequest struct {
	// Model Specification. If version is not specified, will use the latest
	// (numerical) version.
	ModelSpec *ModelSpec `protobuf:"bytes,1,opt,name=model_spec,json=modelSpec" json:"model_spec"`
	// Input data.
	Input *Input `protobuf:"bytes,2,opt,name=input" json:"input"`
}

func (m *ClassificationRequest) Reset()                    { *m = ClassificationRequest{} }
func (m *ClassificationRequest) String() string            { return proto.CompactTextString(m) }
func (*ClassificationRequest) ProtoMessage()               {}
func (*ClassificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ClassificationRequest) GetModelSpec() *ModelSpec {
	if m != nil {
		return m.ModelSpec
	}
	return nil
}

func (m *ClassificationRequest) GetInput() *Input {
	if m != nil {
		return m.Input
	}
	return nil
}

type ClassificationResponse struct {
	// Effective Model Specification used for classification.
	ModelSpec *ModelSpec `protobuf:"bytes,2,opt,name=model_spec,json=modelSpec" json:"model_spec"`
	// Result of the classification.
	Result *ClassificationResult `protobuf:"bytes,1,opt,name=result" json:"result"`
}

func (m *ClassificationResponse) Reset()                    { *m = ClassificationResponse{} }
func (m *ClassificationResponse) String() string            { return proto.CompactTextString(m) }
func (*ClassificationResponse) ProtoMessage()               {}
func (*ClassificationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ClassificationResponse) GetModelSpec() *ModelSpec {
	if m != nil {
		return m.ModelSpec
	}
	return nil
}

func (m *ClassificationResponse) GetResult() *ClassificationResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*Class)(nil), "tensorflow.serving.Class")
	proto.RegisterType((*Classifications)(nil), "tensorflow.serving.Classifications")
	proto.RegisterType((*ClassificationResult)(nil), "tensorflow.serving.ClassificationResult")
	proto.RegisterType((*ClassificationRequest)(nil), "tensorflow.serving.ClassificationRequest")
	proto.RegisterType((*ClassificationResponse)(nil), "tensorflow.serving.ClassificationResponse")
}

func init() { proto.RegisterFile("classification.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x65, 0x23, 0xa9, 0x74, 0x72, 0xa8, 0x2c, 0xa9, 0xc4, 0x82, 0x10, 0xe2, 0x25, 0xa7, 0x14,
	0x9a, 0xab, 0x07, 0xb1, 0x20, 0x78, 0xe8, 0x65, 0xbd, 0x79, 0x91, 0x34, 0x4e, 0x25, 0xb0, 0xcd,
	0xc6, 0xcc, 0x46, 0xff, 0xc0, 0x6f, 0xf0, 0x53, 0x3d, 0x4a, 0x76, 0x1b, 0x4a, 0x52, 0x8b, 0xf4,
	0xb6, 0x33, 0xbc, 0xf7, 0xe6, 0xbd, 0xc7, 0x82, 0x9f, 0xcb, 0x8c, 0xa8, 0xd8, 0x14, 0x79, 0xa6,
	0x0b, 0x55, 0x26, 0x55, 0xad, 0xb4, 0xe2, 0x5c, 0x63, 0x49, 0xaa, 0xde, 0x48, 0xf5, 0x99, 0x10,
	0xd6, 0x1f, 0x45, 0xf9, 0x36, 0xf3, 0x8a, 0xb2, 0x6a, 0xb4, 0x05, 0xcc, 0xbc, 0xad, 0x7a, 0x45,
	0x69, 0x87, 0x28, 0x05, 0x77, 0xd9, 0xaa, 0x70, 0x1f, 0x5c, 0x99, 0xad, 0x51, 0x06, 0x2c, 0x64,
	0xf1, 0x58, 0xd8, 0xa1, 0xdd, 0x52, 0xae, 0x6a, 0x0c, 0x9c, 0x90, 0xc5, 0x8e, 0xb0, 0x43, 0xf4,
	0x00, 0x93, 0x65, 0xef, 0x34, 0xf1, 0x14, 0xce, 0x8d, 0x1b, 0xa4, 0x80, 0x85, 0x67, 0xb1, 0xb7,
	0xb8, 0x4a, 0x0e, 0x7d, 0x24, 0x86, 0x25, 0x3a, 0x64, 0x84, 0xe0, 0xf7, 0x75, 0x04, 0x52, 0x23,
	0x35, 0x5f, 0xc1, 0xa4, 0x1f, 0xad, 0x13, 0xbd, 0x39, 0x2a, 0xba, 0x87, 0x8a, 0x21, 0x37, 0xfa,
	0x62, 0x30, 0x1d, 0xde, 0x79, 0x6f, 0x90, 0x34, 0xbf, 0x05, 0x30, 0x65, 0xbc, 0x50, 0x85, 0xb9,
	0x49, 0xee, 0x2d, 0xae, 0xff, 0xba, 0xb1, 0x6a, 0x51, 0x4f, 0x15, 0xe6, 0x62, 0xbc, 0xed, 0x9e,
	0x7c, 0x0e, 0xae, 0xe9, 0xd5, 0x94, 0x73, 0x24, 0xf1, 0x63, 0x0b, 0x10, 0x16, 0x17, 0x7d, 0x33,
	0xb8, 0x3c, 0x08, 0x5c, 0xa9, 0x92, 0x70, 0xe0, 0xc4, 0x39, 0xd1, 0xc9, 0x1d, 0x8c, 0x6a, 0x53,
	0xdd, 0x2e, 0x43, 0xfc, 0x7f, 0x4f, 0xb6, 0x6a, 0xb1, 0xe3, 0xdd, 0x4f, 0x9f, 0x2f, 0xcc, 0x87,
	0x98, 0xef, 0x89, 0x3f, 0x8c, 0xad, 0x47, 0x66, 0x99, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xdb,
	0x02, 0x79, 0xf3, 0x6b, 0x02, 0x00, 0x00,
}
